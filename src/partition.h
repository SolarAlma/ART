#ifndef PF_H
#define PF_H
/* ---
   Partition functions for Atoms.
   Adapted from N. Piskunov's XSAHA fortran subroutines.
   
   Basically contains a Function that, based on tables, computes
   the parition functions and Ionization potential for as many stages
   the tables include (up to 6 stages).

   Adapted by J. de la Cruz Rodriguez (ISP-SU 2017)
   
   --- */
#include <cmath>
#include "physical_consts.h"

namespace pfn{  
  static const int SIZ_H  =2, OFF_H =0            ;
  static const int SIZ_He= 3, OFF_He=OFF_H +SIZ_H ;
  static const int SIZ_Li= 4, OFF_Li=OFF_He+SIZ_He;
  static const int SIZ_Be= 4, OFF_Be=OFF_Li+SIZ_Li;
  static const int SIZ_B = 4, OFF_B =OFF_Be+SIZ_Be;
  static const int SIZ_C = 6, OFF_C =OFF_B +SIZ_B ;
  static const int SIZ_N = 6, OFF_N =OFF_C +SIZ_C ;
  static const int SIZ_O = 6, OFF_O =OFF_N +SIZ_N ;
  static const int SIZ_F = 6, OFF_F =OFF_O +SIZ_O ;
  static const int SIZ_Ne= 6, OFF_Ne=OFF_F +SIZ_F ;
  static const int SIZ_Na= 6, OFF_Na=OFF_Ne+SIZ_Ne;
  static const int SIZ_Mg= 6, OFF_Mg=OFF_Na+SIZ_Na;
  static const int SIZ_Al= 6, OFF_Al=OFF_Mg+SIZ_Mg;
  static const int SIZ_Si= 6, OFF_Si=OFF_Al+SIZ_Al;
  static const int SIZ_P = 6, OFF_P =OFF_Si+SIZ_Si;
  static const int SIZ_S = 6, OFF_S =OFF_P +SIZ_P ;
  static const int SIZ_Cl= 5, OFF_Cl=OFF_S +SIZ_S ;
  static const int SIZ_Ar= 5, OFF_Ar=OFF_Cl+SIZ_Cl;
  static const int SIZ_K = 5, OFF_K =OFF_Ar+SIZ_Ar;
  static const int SIZ_Ca= 5, OFF_Ca=OFF_K +SIZ_K ;
  static const int SIZ_Sc= 5, OFF_Sc=OFF_Ca+SIZ_Ca;
  static const int SIZ_Ti= 5, OFF_Ti=OFF_Sc+SIZ_Sc;
  static const int SIZ_V = 5, OFF_V =OFF_Ti+SIZ_Ti;
  static const int SIZ_Cr= 5, OFF_Cr=OFF_V +SIZ_V ;
  static const int SIZ_Mn= 5, OFF_Mn=OFF_Cr+SIZ_Cr;
  static const int SIZ_Fe= 5, OFF_Fe=OFF_Mn+SIZ_Mn;
  static const int SIZ_Co= 5, OFF_Co=OFF_Fe+SIZ_Fe;
  static const int SIZ_Ni= 5, OFF_Ni=OFF_Co+SIZ_Co;
  static const int SIZ_Cu= 3, OFF_Cu=OFF_Ni+SIZ_Ni;
  static const int SIZ_Zn= 3, OFF_Zn=OFF_Cu+SIZ_Cu;
  static const int SIZ_Ga= 3, OFF_Ga=OFF_Zn+SIZ_Zn;
  static const int SIZ_Ge= 3, OFF_Ge=OFF_Ga+SIZ_Ga;
  static const int SIZ_As= 3, OFF_As=OFF_Ge+SIZ_Ge;
  static const int SIZ_Se= 3, OFF_Se=OFF_As+SIZ_As;
  static const int SIZ_Br= 3, OFF_Br=OFF_Se+SIZ_Se;
  static const int SIZ_Kr= 3, OFF_Kr=OFF_Br+SIZ_Br;
  static const int SIZ_Rb= 3, OFF_Rb=OFF_Kr+SIZ_Kr;
  static const int SIZ_Sr= 3, OFF_Sr=OFF_Rb+SIZ_Rb;
  static const int SIZ_Y = 3, OFF_Y =OFF_Sr+SIZ_Sr;
  static const int SIZ_Zr= 3, OFF_Zr=OFF_Y +SIZ_Y ;
  static const int SIZ_Nb= 3, OFF_Nb=OFF_Zr+SIZ_Zr;
  static const int SIZ_Mo= 3, OFF_Mo=OFF_Nb+SIZ_Nb;
  static const int SIZ_Tc= 3, OFF_Tc=OFF_Mo+SIZ_Mo;
  static const int SIZ_Ru= 3, OFF_Ru=OFF_Tc+SIZ_Tc;
  static const int SIZ_Rh= 3, OFF_Rh=OFF_Ru+SIZ_Ru;
  static const int SIZ_Pd= 3, OFF_Pd=OFF_Rh+SIZ_Rh;
  static const int SIZ_Ag= 3, OFF_Ag=OFF_Pd+SIZ_Pd;
  static const int SIZ_Cd= 3, OFF_Cd=OFF_Ag+SIZ_Ag;
  static const int SIZ_In= 3, OFF_In=OFF_Cd+SIZ_Cd;
  static const int SIZ_Sn= 3, OFF_Sn=OFF_In+SIZ_In;
  static const int SIZ_Sb= 3, OFF_Sb=OFF_Sn+SIZ_Sn;
  static const int SIZ_Te= 3, OFF_Te=OFF_Sb+SIZ_Sb;
  static const int SIZ_I = 3, OFF_I =OFF_Te+SIZ_Te;
  static const int SIZ_Xe= 3, OFF_Xe=OFF_I +SIZ_I ;
  static const int SIZ_Cs= 3, OFF_Cs=OFF_Xe+SIZ_Xe;
  static const int SIZ_Ba= 3, OFF_Ba=OFF_Cs+SIZ_Cs;
  static const int SIZ_La= 3, OFF_La=OFF_Ba+SIZ_Ba;
  static const int SIZ_Ce= 4, OFF_Ce=OFF_La+SIZ_La;
  static const int SIZ_Pr= 4, OFF_Pr=OFF_Ce+SIZ_Ce;
  static const int SIZ_Nd= 4, OFF_Nd=OFF_Pr+SIZ_Pr;
  static const int SIZ_Pm= 3, OFF_Pm=OFF_Nd+SIZ_Nd;
  static const int SIZ_Sm= 3, OFF_Sm=OFF_Pm+SIZ_Pm;
  static const int SIZ_Eu= 4, OFF_Eu=OFF_Sm+SIZ_Sm;
  static const int SIZ_Gd= 3, OFF_Gd=OFF_Eu+SIZ_Eu;
  static const int SIZ_Tb= 3, OFF_Tb=OFF_Gd+SIZ_Gd;
  static const int SIZ_Dy= 3, OFF_Dy=OFF_Tb+SIZ_Tb;
  static const int SIZ_Ho= 3, OFF_Ho=OFF_Dy+SIZ_Dy;
  static const int SIZ_Er= 3, OFF_Er=OFF_Ho+SIZ_Ho;
  static const int SIZ_Tm= 3, OFF_Tm=OFF_Er+SIZ_Er;
  static const int SIZ_Yb= 3, OFF_Yb=OFF_Tm+SIZ_Tm;
  static const int SIZ_Lu= 3, OFF_Lu=OFF_Yb+SIZ_Yb;
  static const int SIZ_Hf= 3, OFF_Hf=OFF_Lu+SIZ_Lu;
  static const int SIZ_Ta= 3, OFF_Ta=OFF_Hf+SIZ_Hf;
  static const int SIZ_W = 3, OFF_W =OFF_Ta+SIZ_Ta;
  static const int SIZ_Re= 3, OFF_Re=OFF_W +SIZ_W ;
  static const int SIZ_Os= 3, OFF_Os=OFF_Re+SIZ_Re;
  static const int SIZ_Ir= 3, OFF_Ir=OFF_Os+SIZ_Os;
  static const int SIZ_Pt= 3, OFF_Pt=OFF_Ir+SIZ_Ir;
  static const int SIZ_Au= 3, OFF_Au=OFF_Pt+SIZ_Pt;
  static const int SIZ_Hg= 3, OFF_Hg=OFF_Au+SIZ_Au;
  static const int SIZ_Tl= 3, OFF_Tl=OFF_Hg+SIZ_Hg;
  static const int SIZ_Pb= 3, OFF_Pb=OFF_Tl+SIZ_Tl;
  static const int SIZ_Bi= 3, OFF_Bi=OFF_Pb+SIZ_Pb;
  static const int SIZ_Po= 3, OFF_Po=OFF_Bi+SIZ_Bi;
  static const int SIZ_At= 3, OFF_At=OFF_Po+SIZ_Po;
  static const int SIZ_Rn= 3, OFF_Rn=OFF_At+SIZ_At;
  static const int SIZ_Fr= 3, OFF_Fr=OFF_Rn+SIZ_Rn;
  static const int SIZ_Ra= 3, OFF_Ra=OFF_Fr+SIZ_Fr;
  static const int SIZ_Ac= 3, OFF_Ac=OFF_Ra+SIZ_Ra;
  static const int SIZ_Th= 3, OFF_Th=OFF_Ac+SIZ_Ac;
  static const int SIZ_Pa= 3, OFF_Pa=OFF_Th+SIZ_Th;
  static const int SIZ_U = 3, OFF_U =OFF_Pa+SIZ_Pa;
  static const int SIZ_Np= 3, OFF_Np=OFF_U +SIZ_U ;
  static const int SIZ_Pu= 3, OFF_Pu=OFF_Np+SIZ_Np;
  static const int SIZ_Am= 3, OFF_Am=OFF_Pu+SIZ_Pu;
  static const int SIZ_Cm= 3, OFF_Cm=OFF_Am+SIZ_Am;
  static const int SIZ_Bk= 3, OFF_Bk=OFF_Cm+SIZ_Cm;
  static const int SIZ_Cf= 3, OFF_Cf=OFF_Bk+SIZ_Bk;
  static const int SIZ_Es= 3, OFF_Es=OFF_Cf+SIZ_Cf;
  
  static const int idx[99] = {
    OFF_H , OFF_He, OFF_Li, OFF_Be, OFF_B , OFF_C , OFF_N , OFF_O ,
    OFF_F , OFF_Ne, OFF_Na, OFF_Mg, OFF_Al, OFF_Si, OFF_P , OFF_S ,
    OFF_Cl, OFF_Ar, OFF_K , OFF_Ca, OFF_Sc, OFF_Ti, OFF_V , OFF_Cr,
    OFF_Mn, OFF_Fe, OFF_Co, OFF_Ni, OFF_Cu, OFF_Zn, OFF_Ga, OFF_Ge,
    OFF_As, OFF_Se, OFF_Br, OFF_Kr, OFF_Rb, OFF_Sr, OFF_Y , OFF_Zr,
    OFF_Nb, OFF_Mo, OFF_Tc, OFF_Ru, OFF_Rh, OFF_Pd, OFF_Ag, OFF_Cd,
    OFF_In, OFF_Sn, OFF_Sb, OFF_Te, OFF_I , OFF_Xe, OFF_Cs, OFF_Ba,
    OFF_La, OFF_Ce, OFF_Pr, OFF_Nd, OFF_Pm, OFF_Sm, OFF_Eu, OFF_Gd,
    OFF_Tb, OFF_Dy, OFF_Ho, OFF_Er, OFF_Tm, OFF_Yb, OFF_Lu, OFF_Hf,
    OFF_Ta, OFF_W , OFF_Re, OFF_Os, OFF_Ir, OFF_Pt, OFF_Au, OFF_Hg,
    OFF_Tl, OFF_Pb, OFF_Bi, OFF_Po, OFF_At, OFF_Rn, OFF_Fr, OFF_Ra,
    OFF_Ac, OFF_Th, OFF_Pa, OFF_U , OFF_Np, OFF_Pu, OFF_Am, OFF_Cm,
    OFF_Bk, OFF_Cf, OFF_Es};
  
  static const int nLev[99] = {
    SIZ_H , SIZ_He, SIZ_Li, SIZ_Be, SIZ_B , SIZ_C , SIZ_N , SIZ_O ,
    SIZ_F , SIZ_Ne, SIZ_Na, SIZ_Mg, SIZ_Al, SIZ_Si, SIZ_P , SIZ_S ,
    SIZ_Cl, SIZ_Ar, SIZ_K , SIZ_Ca, SIZ_Sc, SIZ_Ti, SIZ_V , SIZ_Cr,
    SIZ_Mn, SIZ_Fe, SIZ_Co, SIZ_Ni, SIZ_Cu, SIZ_Zn, SIZ_Ga, SIZ_Ge,
    SIZ_As, SIZ_Se, SIZ_Br, SIZ_Kr, SIZ_Rb, SIZ_Sr, SIZ_Y , SIZ_Zr,
    SIZ_Nb, SIZ_Mo, SIZ_Tc, SIZ_Ru, SIZ_Rh, SIZ_Pd, SIZ_Ag, SIZ_Cd,
    SIZ_In, SIZ_Sn, SIZ_Sb, SIZ_Te, SIZ_I , SIZ_Xe, SIZ_Cs, SIZ_Ba,
    SIZ_La, SIZ_Ce, SIZ_Pr, SIZ_Nd, SIZ_Pm, SIZ_Sm, SIZ_Eu, SIZ_Gd,
    SIZ_Tb, SIZ_Dy, SIZ_Ho, SIZ_Er, SIZ_Tm, SIZ_Yb, SIZ_Lu, SIZ_Hf,
    SIZ_Ta, SIZ_W , SIZ_Re, SIZ_Os, SIZ_Ir, SIZ_Pt, SIZ_Au, SIZ_Hg,
    SIZ_Tl, SIZ_Pb, SIZ_Bi, SIZ_Po, SIZ_At, SIZ_Rn, SIZ_Fr, SIZ_Ra,
    SIZ_Ac, SIZ_Th, SIZ_Pa, SIZ_U , SIZ_Np, SIZ_Pu, SIZ_Am, SIZ_Cm,
    SIZ_Bk, SIZ_Cf, SIZ_Es};
  
  static const unsigned NTABLE = 360;
  static const int table[NTABLE][8] = {
    //        0,        0,        0,        0,        0,       0, 0, 0, // Dummy
    200020001,200020011,201620881,231228281,378953411, 1359502, 1,00,//D+F H  1
    100010001,100010001,100010001,100010001,100010001, 1359500, 1,01,//G   H  2
    //
    100010001,100010011,102111241,145022061,363059451, 2458104, 2,00,//D+F He 1
    200020001,200020071,208524971,382669341,128222452, 5440302, 2,01,//D+F He 2
    100010001,100010001,100010001,100010001,100010001, 5440300, 2,02,//G   He 3
    //
    200020011,201220481,212922881,258731081,394251691,  538901, 3,00,//D+F Li 1
    100010001,100010201,126225521, 67216512,351165562, 7561907, 3,01,//D+F Li 2
    200020001,200020211,227936571, 69610342,137217102,12241800, 3,02,//D+F Li 3
    100010001,100010001,100010001,100010001,100010001,12241800, 3,03,//G   Li 4
    //
    100010051,104311441,131615641,190623681,298037691,  931900, 4,00,//AEL Be 1
    200120231,211422771,249627631,309034911,398545051, 1820600, 4,01,//AEL Be 2
    100010001,100010201,126225521, 67216512,351165562,15385000, 4,02,//AEL Be 3
    200020001,200020011,201220661,223426161,332644691,21765700, 4,03,//AEL Be 4
    //
    600060001,600560281,608761991,637466191,693973361,  829500, 5,00,//AEL B  1
    100310831,132016901,214226411,315736741,419147071, 2514900, 5,01,//AEL B  2
    200721061,233526401,297533311,369040481,440747651, 3792000, 5,02,//AEL B  3
    100010001,100010001,100010001,100010001,100010001,25929800, 5,03,//G   B  4
    //
    893292271, 96110042,105311262,126315202,196126432, 1125508, 6,00,//D+F C  1
    595060251,620865751,713280191, 95712292,167623542, 2437501, 6,01,//D+F C  2
    105513201,180324851,341851341, 88416332,296550722, 4787101, 6,02,//D+F C  3
    204922771,262630421,350941931,494556971,644872001, 6447600, 6,03,//D+F C  4
    100010001,100010001,100010001,100010001,100010001,39207700, 6,04,//G   C  5
    200020001,200020001,200020001,200020001,200020001,48998100, 6,05,//G   C  6
    //
    403141851,457051681,594071181, 92913362,203331152, 1452915, 7,00,//D+F N  1
    919899541,107211512,124914302,182526232,403762662, 2959202, 7,01,//D+F N  2
    596862721,684177081, 88110342,128317062,239334312, 4742501, 7,02,//D+F N  3
    112816481,240733751,462068491,116419932,283736822, 7744900, 7,03,//D+F N  4
    210124681,293634211,391145791,539862151,703178471, 9786200, 7,04,//D+F N  5
    100010001,100010001,100010001,100010001,100010001,55205700, 7,05,//G   N  6
    //
    874789691,924795711, 99410492,115213492,169022242, 1361307, 8,00,//D+F O  1
    424151091,622874781, 91312832,221842502, 79914013, 3510711, 8,01,//D+F O  2
     95610702,118113032,149619922,329761642,101914173, 5488500, 8,02,//D+F O  3
    603567171,775391141,106612482,143716252,181420032, 7739300, 8,03,//D+F O  4
    124420321,306943181,606281181,101712232,142916342,11387300, 8,04,//D+F O  5
    215026541,323137551,421546491,508255151,594863811,13807900, 8,05,//AEL O  6
    //
    575958511,589859231,595860671,636470031,815199581, 1741802, 9,00,//D+F F  1
    900296401,102610802,113912542,152921152,318348952, 3498003, 9,01,//D+F F  2
    469162651,791295541,121419552,402686872,154822203, 6264500, 9,02,//D+F F  3
     99511422,129214572,170523002,320140922,498458762, 8713900, 9,03,//D+F F  4
    615472711, 87710602,127215002,172919582,218624152,11421300, 9,04,//D+F F  5
    135324181,377252001,661580261, 94410852,122613672,15711700, 9,05,//AEL F  6
    //
    100010001,100010051,105313051,210239461, 74013022, 2155808,10,00,//D+F Ne 1
    580158751,591759741,642687101,159332652, 64111533, 4106907,10,01,//D+F Ne 2
    93510272,110411662,127116062,257647882, 75110223, 6350000,10,02,//D+F Ne 3
    529774371, 94611322,135816202,188221442,240626682, 9701900,10,03,//D+F Ne 4
    103312152,140616092,181320182,222224262,263128352,12630000,10,04,//AEL Ne 5
    629178711, 98311802,136715512,173619202,210422892,15790900,10,05,//AEL Ne 6
    //
    200020001,200320211,207322131,253031421,417657451,  513802,11,00,//D+F Na 1
    100010001,100010161,119621261, 50711872,246445382, 4728901,11,01,//D+F Na 2
    580158751,591860351, 71813142,321968812,106014333, 7165000,11,02,//D+F Na 3
     96910772,116012242,130714232,153916552,177118872, 9888000,11,03,//D+F Na 4
    601386081,108812932,148916832,187820722,226624612,13836900,11,04,//AEL Na 5
    105712442,144616652,189221182,234425702,279630222,17209000,11,05,//AEL Na 6
    //
    100010011,101410621,118414581,204831781,509479731,  764404,12,00,// D+F Mg 1
    200120051,202921001,226926901,368457091, 92814872, 1503101,12,01,// D+F Mg 2
    100010001,100110611,177455431,176546012, 99718753, 8011905,12,02,// D+F Mg 3
    579758751,591459501,600560591,611461681,622362781,10928900,12,03,// AEL Mg 4
    100611232,120612752,134214102,147815462,161416822,14122900,12,04,// AEL Mg 5
    674896701,121814462,167018942,211723412,256527892,18648900,12,05,// AEL Mg 6
    //
    558857701,583558761,593260591,635969541,796790971,  598400,13,00,//D+F Al 1
    100310211,110313021,172828201, 55311252,215637942, 1882203,13,01,//D+F Al 2
    200320201,208622331,250530971,410251081,611571211, 2844000,13,02,//D+F Al 3
    100010001,100210881,207436531,523168101,838999681,11996000,13,03,//D+F Al 4
    577758651,591259631,604461351,622563161,640764981,15377000,13,04,//AEL Al 5
    103511582,124713242,140014772,155316292,170517812,19042000,13,05,//AEL Al 6
    //
    825189211, 95210052,106211532,134317202,237934082,  814913,14,00,//D+F Si 1
    563057761,588160311,631768671,791097651,127817282, 1634000,14,01,//D+F Si 2
    101110771,126716471,232438081, 71914052,262045302, 3346001,14,02,//D+F Si 3
    200720521,217224081,284439171,551370951, 86810262, 4513000,14,03,//D+F Si 4
    100010001,100210881,207436531,523168101,838999681,16672900,14,04,//FAK Si 5
    575458521,591459851,610063201,672674071,843698661,20510900,14,05,//AEL Si 6
    //
    402643441,496757481,658274401,833492941,103511532, 1048300,15,00,//AEL P  1
    874497931,106011282,119812802,138415142,164717802, 1972000,15,01,//AEL P  2
    564058061,604164611,709579551, 90410172,112912422, 3015500,15,02,//AEL P  3
    100811411,149720221,280936121,441552181,602168241, 5135400,15,03,//AEL P  4
    200420781,227025361,281430911,336936471,392542021, 6500700,15,04,//AEL P  5
    100010001,100010001,100010001,100010001,100010001,22041300,15,05,//G   P  6
    //
    822887891,930697831,102610932,121614492,185124742, 1035708,16,00,//D+F S  1
    443056011,694982961, 96911522,144218572,227326892, 2339900,16,01,//D+F S  2
     91610392,113512242,136416942,233429882,364242962, 3500000,16,02,//D+F S  3
    560058861,633871081, 82410062,123314602,168619132, 4728900,16,03,//D+F S  4
    104512901,177025421,375163021,122420462,286036742, 7250000,16,04,//D+F S  5
    202321571,241428261,358355061, 78310152,124814802, 8802800,16,05,//D+F S  6
    //
    538155931,571657911,598067191, 89013782,227737172, 1300916,17,00,//D+F Cl 1
    873396771,104411072,118513532,175525872,406763932, 2379903,17,01,//D+F Cl 2
    506569571, 87610522,134421682,439092662,182132573, 3990006,17,02,//D+F Cl 3
     95110872,120013232,154921252,345149322,641378942, 5350000,17,03,//D+F Cl 4
    558960371,677779341, 95311692,138816082,182720472, 6780000,17,04,//D+F Cl 5
    //
    100010001,100010051,106913911,240147261, 90716112, 1575411,18,00,//D+F Ar 1
    550256831,578158781,636585461,151530162, 58010303, 2762007,18,01,//D+F Ar 2
     92110362,112412002,133216772,254443722, 76512833, 4090003,18,02,//D+F Ar 3
    582082081,103112292,149920212,309750502,720793642, 5978900,18,03,//D+F Ar 4
     97111072,123213982,172625622,463976582,106413633, 7500000,18,04,//D+F Ar 5
    //
    200020011,200720361,211923291,280137141,525575741,  433803,19,00,//D+F K  1
    100010001,100110341,135929551, 79119282,405274892, 3180905,19,01,//D+F K  2
    554657081,581260301, 73012702,285363872,129023363, 4600005,19,02,//D+F K  3
     96010862,118413212,180836632, 90321023,416863253, 6090000,19,03,//D+F K  4
    657793361,119515082,195826322,352944302,533162332, 8259900,19,04,//D+F K  5
    //
    100110061,104311741,145919971,294345051, 69010322,  611003,20,00,//D+F Ca 1
    205822781,279234761,427553061,688994901,136319772, 1186701,20,01,//D+F Ca 2
    100010001,100510821,168744821,130232522, 69012813, 5121003,20,02,//D+F Ca 3
    555157161,585662471, 82816862, 42510013,168423663, 6700000,20,03,//D+F Ca 4
     99411262,123814062,182930402,484766392, 84310223, 8438900,20,04,//D+F Ca 5
    //
    924696691,105212282,151219062,240530032,368944512,  653900,21,00,//AEL Sc 1
    190424662,297634542,391743752,482952832,573761912, 1280000,21,01,//AEL Sc 2
    976799291,101110322,105810882,111911502,118112122, 2475000,21,02,//AEL Sc 3
    100010001,100510821,168744821,130232522, 69012813, 7390000,21,03,//FAK Sc 4
    555157161,585662471, 82816862, 42510013,168423663, 9200000,21,04,//FAK Sc 5
    //
    181021172,260333222,430155582,710089242,110213293,  681900,22,00,//D+F Ti 1
    474659872,721284672, 98211413,134515623,177919963, 1356900,22,01,//D+F Ti 2
    228327012,308134272,381143862,534563472,734983512, 2747000,22,02,//D+F Ti 3
    971498311, 99210032,102610572,108711172,114711782, 4324000,22,03,//D+F Ti 4
    100010001,100510821,168744821,130232522, 69012813, 9980000,22,04,//FAK Ti 5
    //
    272835172,425851532,632278322, 97212013,146817723,  674000,23,00,//AEL V  1
    373954132,743597002,121414713,173920143,229225713, 1464900,23,01,//AEL V  2
    323142642,519660272,679975352,824789522, 96610363, 2930900,23,02,//AEL V  3
    248329302,324234952,373439752,421744582,469949412, 4800000,23,03,//AEL V  4
    970698231,990699881,100710152,102410322,104010482, 6500000,23,04,//AEL V  5
    //
    717277611, 92911652,152620872,295141952,550468122,  676400,24,00,//D+F Cr 1
     71611552,205635512,558281952,115315823,205625293, 1649000,24,01,//D+F Cr 2
    280639822,538369722, 87610823,129115003,170919183, 3095000,24,02,//D+F Cr 3
    377150952,616070292,791788382, 97610683,116012523, 5000000,24,03,//D+F Cr 4
    264730962,341436462,394042872,463549832,533056782, 7300000,24,04,//D+F Cr 5
    //
    600060321,629270891, 86911302,151020222,267534752,  743100,25,00,//AEL Mn 1
    739594821,139921212,309342852,567372412, 97112553, 1563600,25,01,//AEL Mn 2
     98417472,265535782,454754842,641973532,828792212, 3369000,25,02,//AEL Mn 3
    328847052,586668342,771785912, 94710343,112112093, 5300000,25,03,//AEL Mn 4
    422055132,636770792,779285062,921999322,106411363, 7600000,25,04,//AEL Mn 5
    //
    //    1 197023222,274433302,416753952,723799822,139419053,  787038,26,00,D+F Fe 1
    197023222,274433302,416753952,723799822,139419053,  790024,26,00,//D+F Fe 1! Ion. potential from NIST J. Sugar and C. Corliss, J. Phys. Chem. Ref. Data 14, 1-664 (1985).
    409453722,686687452,110213823,174322233,286437043, 1618792,26,01,//D+F Fe 2! Kurucz
    // 409453722,686687452,110213823,174322233,286437043, 1617902,26,01,D+F Fe 2
    // 262136422,501167232, 87911303,138916483,190721673, 3064300,26,02,D+F Fe 3
    262136422,501167232, 87911303,138916483,190721673, 3065200,26,02,//D+F Fe 3 ! Kurucz
     98723522,420363072, 87011423,145117913,215925463, 5700000,26,03,//AEL Fe 4
    388854482,666275742,846693572,102511143,120312923, 7900000,26,04,//D+F Fe 5
    //
    //199427202,335740022,474957182,708090462,118315403,  786000,27,00,D+F Co 1
    199427202,335740022,474957182,708090462,118315403,  788100,27,00,//D+F Co 1
    279739202,490858232,684582472,104713233,159818733, 1704900,27,01,//D+F Co 2
    279836622,461857562,720693022,124915873,192522633, 3349000,27,02,//D+F Co 3
    262136422,501167232, 87911303,138916483,190821673, 5300000,27,03,//FAK Co 4
     98723522,420363072, 87011423,145117913,215925463, 8300000,27,04,//FAK Co 5
    //
    //227027622,306233052,356839222,446052912,652382292,  763314,28,00,//D+F Ni 1
    227027622,306233052,356839222,446052912,652382292,  763996,28,00,//D+F Ni 1
    108416342,222428472,353944332,577378932,110314303, 1814900,28,01,//D+F Ni 2
    198724282,293236452,468362702, 86511123,136016073, 3516000,28,02,//D+F Ni 3
    279836622,461857562,720693022,124915873,192522633, 5600000,28,03,//FAK Ni 4
    262136422,501167232, 87911303,138916483,190721673, 7900000,28,04,//FAK Ni 5
    //
    201620781,231026761,314737361,450555381,692386911,  772301,29,00,//D+F Cu 1
    109415761,247938311, 58910042,190937022, 68311693, 2028903,29,01,//D+F Cu 2
    897195961,107212972,165021182,260230862,356940532, 3682900,29,02,//D+F Cu 3
    //
    100010001,100410231,108712611,167124841,388460411,  939102,30,00,//D+F Zn 1
    200020021,201620761,223726341,351352061, 80812472, 1796001,30,01,//D+F Zn 2
    100610471,122617301,300566361,149924112,332342352, 3970000,30,02,//D+F Zn 3
    //
    403245601,493151431,529654331,559358091,611065171,  600000,31,00,//AEL Ga 1
     99710051,104511541,135016501,208226431,321837921, 2050900,31,01,//AEL Ga 2
    199820071,204521391,229124761,266028451,302932131, 3070000,31,02,//AEL Ga 3
    //
    502665261,755183501,901496201,102410942,117912812,  787900,32,00,//AEL Ge 1
    422848161,512153401,557458941,636270361,794489061, 1593000,32,01,//AEL Ge 2
    100010261,114613921,175221251,249828711,324436181, 3421000,32,02,//AEL Ge 3
    //
    403143241,491856701,649173781,840396751,113013392,  981000,33,00,//AEL As 1
    593676641,884697521,105911572,129515012,180322212, 1858700,33,01,//AEL As 2
    484470541, 91510972,125614082,157017612,199722912, 2829900,33,02,//AEL As 3
    //
    630172361,799686381,919797221,102810942,117712832,  975000,34,00,//AEL Se 1
    438055511,691582151, 94510732,121413672,152016732, 2150000,34,01,//AEL Se 2
    651982921, 94610382,113212492,139515462,169718482, 3200000,34,02,//AEL Se 3
    //
    437347431,498951671,538559501, 74710812,169126672, 1183910,35,00,//D+F Br 1
    705183611, 93510092,111614162,222932532,427652992, 2160000,35,01,//D+F Br 2
    510869921, 87410312,123116552,236530712,377744832, 3590000,35,02,//D+F Br 3
    //
    100010001,100010051,105012781,198535971, 65911422, 1399507,36,00,//D+F Kr 1
    461049811,522254261,609088131,168935052, 68612253, 2455908,36,01,//D+F Kr 2
    759990901,101911142,129017782,302856642, 99414333, 3690000,36,02,//D+F Kr 3
    //
    200020011,200720361,211523021,269434141,459163351,  417502,37,00,//D+F Rb 1
    100010001,100110321,129524961, 61014202,291753192, 2750004,37,01,//D+F Rb 2
    473650891,533156051, 66810932,232950852, 99915303, 4000000,37,02,//D+F Rb 3
    //
    100110041,104111741,146019721,281941411,607785251,  569202,38,00,//D+F Sr 1
    202621931,255331271,384347931,624085761,122417632, 1102600,38,01,//D+F Sr 2
    100010001,100110321,129524961, 61014202,291753192, 4300000,38,02,//FAK Sr 3
    //
    //791587851,100012192,155119942,254031782,389946932,  637900,39,00,AEL Y  1
    791587851,100012192,155119942,254031782,389946932,  621710,39,00,//AEL Y  1 ! From Kurucz
    118217102,220827002,319036792,416646512,513256072, 1223000,39,01,//AEL Y  2
     92510012,104710862,112311612,120212472,132814282, 2050000,39,02,//AEL Y  3
    //
    141320802,291439702,531170262, 92712273,162521053,  663400,40,00,//D+F Zr 1 ! Ion. potential from NIST P.A. Hackett, M.R. Humphries, S.A. Mitchell, and D.M. Rayner, J. Chem. Phys. 85, 3194-3197 (1986)
    354454352,724689652,107212643,148517093,193321573, 1312900,40,01,//D+F Zr 2
    209727032,324537052,415446282,510255752,604965222, 2298000,40,02,//D+F Zr 3
    //
    //256636022,465759302,749693962,116514243,171520333,  687900,41,00,//AEL Nb 1
    256636022,465759302,749693962,116514243,171520333,  675890,41,00,//AEL Nb 1 ! From Kurucz
    335157222, 84511463,147718363,221826083,299933893, 1431900,41,01,//AEL Nb 2
    223725352,280830972,340937362,406844002,473150632, 2503900,41,02,//AEL Nb 3
    //
    //703972941, 82610822,154822682,327244912,571469372,  709900,42,00,//D+F Mo 1
    703972941, 82610822,154822682,327244912,571469372,  709250,42,00,//D+F Mo 1 ! From Kurucz
     69113342,270146932, 71810043,131916543,200323603, 1614900,42,01,//NPk Mo 2 ! PFs are calculated using energy levels from Nilsson & Pickering, 2003, Phys. Scr., 67, 223
    267645462,669890262,115514323,173620673,242528083, 2714900,42,02,//AEL Mo 3
    //
     90113722,190525812,348647032,631684102,110714373,  728000,43,00,//Pal Tc 1 ! PFs are taken from Palmeri et al. 2007, MNRAS, 374, 63
    132521482,335250142, 72110033,135517843,229929083, 1525900,43,01,//Pal Tc 2 ! PFs are taken from Palmeri et al. 2007, MNRAS, 374, 63
     80117462,174618952,189518952,189518952,189518952, 3000000,43,02,//Pal Tc 3 ! PFs are taken from Palmeri et al. 2007, MNRAS, 374, 63
    //
    176824122,318941082,515263202,761790472,106112303,  736400,44,00,//AEL Ru 1
    221934642,501968372, 88911173,136316243,189221613, 1675900,44,01,//AEL Ru 2
    210622722,241025422,267928262,297731272,327834282, 2846000,44,02,//AEL Ru 3
    //
    148520202,255230902,364942462,489656082,638872352,  746000,45,00,//AEL Rh 1
    153421292,288137912,484660322,720187062,101011483, 1807000,45,01,//AEL Rh 2
    254537212,492362292,770592182,107312243,137615273, 3104900,45,02,//AEL Rh 3
    //
    115919651,320746011,607576761, 95011642,141817172,  832900,46,00,//AEL Pd 1
    755087211,105913442,173122222,282034722,412247732, 1941900,46,01,//AEL Pd 2
    180223462,289735212,414247632,538460052,662672472, 3292000,46,02,//AEL Pd 3
    //
    200020001,200220141,206422141,257633021,455164681,  757403,47,00,//D+F Ag 1
    100810581,125817401,260641031, 66210072,135316982, 2148000,47,01,//D+F Ag 2
    795887491, 97711762,156620252,248329422,340038582, 3481900,47,02,//D+F Ag 3
    //
    100010001,100410241,109212891,176827421,444268771,  899003,48,00,//D+F Cd 1
    200020021,201720921,233329881,451475371,127520782, 1690301,48,01,//D+F Cd 2
    100310281,114815371,246138311,519265531,791492761, 3747000,48,02,//D+F Cd 3
    //
    252431921,368440461,433746521,512259221,723389021,  578400,49,00,//D+F In 1
    100110071,104611651,146118581,225426511,304734431, 1886000,49,01,//D+F In 2
    200120111,205021611,243628031,317035371,390442701, 2802900,49,02,//D+F In 3
    //
    232637101,488058571,669074381,816189091, 97210632,  734200,50,00,//AEL Sn 1
    286335941,408144471,479351961,571862901,686274341, 1462700,50,01,//AEL Sn 2
    100010251,114013811,175321601,256829751,338337901, 3049000,50,02,//AEL Sn 3
    //
    404043481,494656811,646772781,813490751,101411372,  863900,51,00,//AEL Sb 1
    303147981,618472951,827392621,103711702,131214532, 1650000,51,01,//AEL Sb 2
    313037601,429347901,536260591,689477591,862494881, 2529900,51,02,//AEL Sb 3
    //
    526258801,657372351,784284071,897095741,102711082,  900900,52,00,//AEL Te 1
    440855541,686481251, 93810792,125414792,176321132, 1860000,52,01,//AEL Te 2
    349054751,699883081, 96611302,134216202,197724212, 2800000,52,02,//AEL Te 3
    //
    405342041,438645621,475751071,587974491,102214572, 1045404,53,00,//D+F I  1
    568567471,773485861, 94510362,112712182,130914002, 1909000,53,01,//D+F I  2
    514269581, 86910562,130716652,215327742,351843662, 3200000,53,02,//AEL I  3
    //
    100010001,100010091,109515351,291060661,119621482, 1212716,54,00,//D+F Xe 1
    414844131,465649111,538464651, 87112232,158019362, 2120000,54,01,//D+F Xe 2
    615475101,867797531,112213462,157618062,203622662, 3209900,54,02,//D+F Xe 3
    //
    200020001,201020501,215623871,283536181,462756261,  389300,55,00,//D+F Cs 1
    100010001,100310371,119016501,269146361, 77912412, 2510000,55,01,//D+F Cs 2
    424445601,481750061,516953311,549356551,581759791, 3500000,55,02,//D+F Cs 3
    //
    101210791,135119351,282340571,574580391,111015062,  521002,56,00,//D+F Ba 1
    262638611,504160621,698579371, 91010692,129115952, 1000000,56,01,//D+F Ba 2
    100010001,100310351,118416321,264945521, 76512182, 3700000,56,02,//FAK Ba 3
    //
     71111992,172323592,312540402,510763182,765791012,  557700,57,00,//AEL La 1
    204529582,383647882,582469262,807992692,104911723, 1106000,57,01,//AEL La 2
     94712552,148416582,179819212,203621522,227424042, 1917700,57,02,//AEL La 3
    //
    516771922,101415733,230431963,422563713,661579353,  553870,58,00,//AEL Ce 1 ! PFs are taken from Palmeri et al. 2000, Phys. Scr., 61, 323
     71918863,305242193,538665523,771988853,100511224, 1085000,58,01,//MZH Ce 2 ! PFs are taken from Palmeri et al. 2000, Phys. Scr., 61, 323
    506183092,108612923,146416133,174418603,196520603, 2020000,58,02,//CCB Ce 3 ! PFs are taken from Cowley & Barisciano 1994, Obs., 114, 308
    118012722,134214202,152616852,191722342,264131332, 3690600,58,03,//RW  Ce 4 ! PFs are calculated using energy levels from Reader & Wyart 2009, Phys. Rev. A, 80, 042517
    //
    146526632,508289352,142720943,287237333,465456163,  547300,59,00,//Sne Pr 1 ! polynomial approximation from Batom.f subroutine of MOOG code: http://verdi.as.utexas.edu/moog.html
     53615083,324256453, 86012064,159720354,251930474, 1055000,59,01,//ISA Pr 2 ! PFs are calculated using energy levels from Mashonkina et al. 2009, A&A, 495, 297
    421093902,165924663,331041793,507660143,700980743, 2162400,59,02,//ISA Pr 3 ! PFs are calculated using energy levels from Mashonkina et al. 2009, A&A, 495, 297
    373649462,593368882,785988552, 98810923,119813043, 3900000,59,03,//AEL Pr 4 ! PFs are calculated using NIST energy levels
    //
    145623072,410172132,120218793,276138313,505263693,  552500,60,00,//Sne Nd 1 ! polynomial approximation from Batom.f subroutine of MOOG code: http://verdi.as.utexas.edu/moog.html
     47511303,223037433,559777223,100512564,151817894, 1073000,60,01,//ISA Nd 2 ! PFs are calculated using energy levels from Mashonkina et al. 2005, A&A, 441, 309
    432699302,204835193,525971403, 90710984,128314614, 2218000,60,02,//ISA Nd 3 ! PFs are calculated using energy levels from Ryabchikova et al. 2006, A&A, 456, 329
    104717683,241529543,339937663,407343323,455447453, 4042000,60,03,//Wyt Nd 4 ! PFs are calculated using energy levels from Wyart et al. 2006, J. Phys. B39, L77
    //
    293029302,339657372, 97415223,219529733,383647633,  558200,61,00,//Fiv Pm 1 ! PFs are taken from Fivet at al. 2007, MNRAS, 380, 771
     53611273,274552953, 86912833,176222974,288035004, 1090000,61,01,//Fiv Pm 2 ! PFs are taken from Fivet at al. 2007, MNRAS, 380, 771
     49012373,262048233,482348233,519661563,709279783, 2230000,61,02,//Fiv Pm 3 ! PFs are taken from Fivet at al. 2007, MNRAS, 380, 771
    //
     92915672,222431062,444763802, 89612173,159520253,  564370,62,00,//AEL Sm 1
    315059662, 97114563,204627093,342541693,490556383, 1106900,62,01,//AEL Sm 2
    269037812,520270372, 91111273,133915483,172719093, 2340000,62,02,//AEL Sm 3
    //
    800080571,851699301,127617362,240433032,444958442,  567045,63,00,//AEL Eu 1
    125416052,211828182,375549622,644381732,101112213, 1124100,63,01,//AEL Eu 2
     82514782, 47913863,315459503, 98114674,204226924, 2492000,63,02,//ISA Eu 3 ! PFs are calculated using energy levels from Wyart et al. 2008, A&A, 483, 339
    353543472,487852542,553557522,592460632,617962762, 4265000,63,03,//AEL Eu 4 ! PFs are calculated using NIST energy levels
    //
    244232982,441460242, 82611223,149719523,247930643,  615000,64,00,//Sne Gd 1 ! polynomial approximation from Batom.f subroutine of MOOG code: http://verdi.as.utexas.edu/moog.html
    534793262,139219123,247730843,371043333,495055893, 1209000,64,01,//AEL Gd 2
    364145232,514756362,604864112,673870372,732276072, 2063000,64,02,//AEL Gd 3
    //
    546880382,113515623,209227313,347543173,524362333,  586390,65,00,//Sne Tb 1 ! polynomial approximation from Batom.f subroutine of MOOG code: http://verdi.as.utexas.edu/moog.html
     56510823,163922043,279234353,417550623,615575303, 1151900,65,01,//Sne Tb 2 ! polynomial approximation from Batom.f subroutine of MOOG code: http://verdi.as.utexas.edu/moog.html
     53713323,276551143, 85012894,181224014,304037114, 2191000,65,02,//ISA Tb 3 ! PFs are calculated using Wyart & Ryabtsev extended energy levels analysis (Ryabtsev, private communication)
    //
    175219662,262038952,604693902,142320733,288338103,  593890,66,00,//Sne Dy 1 ! polynomial approximation from Batom.f subroutine of MOOG code: http://verdi.as.utexas.edu/moog.html
    347359162,108619003,300742453,533359923,606555733, 1167000,66,01,//Sne Dy 2 ! polynomial approximation from Batom.f subroutine of MOOG code: http://verdi.as.utexas.edu/moog.html
    320279972,191238513, 66810374,148019834,253331184, 2280000,66,02,//ISA Dy 3 ! PFs are calculated using Wyart & Ryabtsev extended energy levels analysis (Ryabtsev, private communication)
    //
    222635002,542276772,100312353,145716713,187020703,  602160,67,00,//FAK Ho 1
    321455092,112322203,401966563,102014674,200226144, 1180000,67,01,//Bor Ho 2 ! PFs are taken from Bord & Cowley 2002, Sol. Phys., 211, 3
    222635002,542276772,100312353,145716713,187020703, 2284000,67,02,//AEL Ho 3
    //
    131715322,213632462,504577482,115416533,226829683,  610780,68,00,//Sne Er 1 ! polynomial approximation from Batom.f subroutine of MOOG code: http://verdi.as.utexas.edu/moog.html
    282946962, 81713443,201827463,339638403,399938623, 1193000,68,01,//Sne Er 2 ! polynomial approximation from Batom.f subroutine of MOOG code: http://verdi.as.utexas.edu/moog.html
    801281851, 91511592,166126662,472591362,190642503, 2274000,68,02,//Irw Er 3 ! PFs are calculated using polynomial approximation from Irwin 1981, ApJS, 45, 621
    //
    800381111, 87510702,147621462,310343462,585475982,  618436,69,00,//AEL Tm 1
    156718872,279244452,678196342,128316243,197823443, 1205000,69,01,//AEL Tm 2
     93517192,364666132,103414613,192624193,293334613, 2368000,69,02,//AEL Tm 3
    //
    104410001,100011021,142920191,299545391, 68910342,  625394,70,00,//Sne Yb 1 ! polynomial approximation from Batom.f subroutine of MOOG code: http://verdi.as.utexas.edu/moog.html
    200120901,270345231, 81714042,223533112,461959862, 1218400,70,01,//AEL Yb 2
    100312561,250851931, 91914182,198626022,323638692, 2505000,70,02,//AEL Yb 3
    //
    514664441,759086851, 99211442,133315612,182721252,  542589,71,00,//AEL Lu 1
    125924831,438667801, 98714112,199727872,380850742, 1389900,71,01,//AEL Lu 2
    //112718911,335853801,742987841,895879721,626944081, 1389900,71,01,//Sne Lu 2
    323948621,661297271,158626482,426865032, 93712843, 2095960,71,02,//AEL Lu 3
    //
    659294081,128016962,222528952,372047062,585171462,  700000,72,00,//AEL Hf 1
     99117882,274638812,520867322, 84410313,123314453, 1489900,72,01,//AEL Hf 2
    187427702,343739872,448049452,539358282,625266642, 2329900,72,02,//AEL Hf 3
    //
     65210892,171325762,373552252,705192012,116414343,  787900,73,00,//AEL Ta 1
    192837842,600784802,111113823,165419233,218524383, 1620000,73,01,//AEL Ta 2
     99117872,274638812,520867312, 84410313,123314453, 2400000,73,02,//FAK Ta 3
    //
    398981651,130019172,273438022,516168382, 88411163,  797900,74,00,//AEL W  1
    131429482,523279952,111414623,183422233,262130233, 1770000,74,01,//AEL W  2
    192837842,600784792,111113823,165419233,218524383, 2500000,74,02,//FAK W  3
    //
    600963001, 75910412,150121572,301940972,539168952,  787000,75,00,//AEL Re 1
     73710852,190731262,464964142, 83810503,127315053, 1660000,75,01,//AEL Re 2
    131429482,523279952,111414623,183422233,262130233, 2600000,75,02,//FAK Re 3
    //
    110815502,216829732,398752322,672484682,104612673,  850000,76,00,//AEL Os 1
    168225972,362046562,566766422,757484612, 93010103, 1700000,76,01,//AEL Os 2
     73710852,190731262,464964142, 83810503,127315053, 2700000,76,02,//FAK Os 3
    //
    128117692,236030402,381847322,582671422, 87110533,  896700,77,00,//AEL Ir 1 ! IP=8.96702 eV according to NIST
    216133402,476163702,811599542,118413753,156417503, 1691000,77,01,//VKM Ir 2 ! PFs are calculated from energy levels of van Kleef & Metsch 1978, Physica C95, 251; IP=16.91 eV from Carlson et al. 1970
    168225972,362046562,566766422,757484612, 93010103, 2800000,77,02,//FAK Ir 3
    //
    158918512,207523002,254328242,316335762,407246582,  900000,78,00,//AEL Pt 1
     98115462,224930742,401150612,623475412, 89910583, 1855900,78,01,//AEL Pt 2
    110815502,216829732,398752322,672484682,104612673, 2900000,78,02,//FAK Pt 3
    //
    203222611,265731251,364042301,494958601,702084731,  922000,79,00,//AEL Au 1
    120521331,357753801, 75310062,130516572,206925452, 2050000,79,01,//AEL Au 2
    651780821,108814772,195925252,316338622,460853882, 3000000,79,02,//AEL Au 3
    //
    100010001,100110111,105211851,152122101,341552811, 1043002,80,00,//D+F Hg 1
    200320211,210023021,268834231,480472341,111416912, 1875000,80,01,//D+F Hg 2
    104012871,186129471,458664151, 82410072,119013732, 3420000,80,02,//D+F Hg 3
    //
    200420711,222424271,265429161,325637371,442853911,  610500,81,00,//AEL Tl 1
    100010021,101910801,121414641,189525811,358949721, 2041900,81,01,//AEL Tl 2
    200020311,216624611,296337451,489064791, 85711212, 2979900,81,02,//AEL Tl 3
    //
    103411711,147819101,244331781,434862751, 93113762,  741404,82,00,//D+F Pb 1
    204122231,248227841,311535621,429153941,651976431, 1502800,82,01,//D+F Pb 2
    100210131,106812201,154522671,381665951, 95512512, 3192900,82,02,//D+F Pb 3
    //
    400140351,416944121,474851591,564362181,690477231,  728700,83,00,//AEL Bi 1
    106814451,204427341,350744811,586879131,108314772, 1667900,83,01,//AEL Bi 2
    205523051,264830231,345439921,469156001,675281671, 2555900,83,02,//AEL Bi 3
    //
    500950661,518153561,559058941,628968071,748483501,  843000,84,00,//AEL Po 1
    443756241,696282451, 95411012,128615262,182922012, 1900000,84,01,//FAK Po 2
    336953201,682481011, 93810882,127915272,184622442, 2700000,84,02,//FAK Po 3
    //
    402841621,431544771,463148311,520059491,734896851,  930000,85,00,//FAK At 1
    576168741,788387631, 96910642,116012552,135014462, 2000000,85,01,//FAK At 2
    490265341,812797201,116614322,179622692,285035302, 2900000,85,02,//FAK At 3
    //
    100010001,100010031,102311051,133018071,264539391, 1074500,86,00,//AEL Rn 1
    402841621,431544771,463148311,520059491,734996851, 2000000,86,01,//FAK Rn 2
    576168741,788387631, 96910642,116012552,135014462, 3000000,86,02,//FAK Rn 3
    //
    200020011,201220591,218124481,296538611,488859141,  400000,87,00,//FAK Fr 1
    100010001,100010031,102311051,133018071,264539401, 2200000,87,01,//FAK Fr 2
    421645151,477449611,511852711,542455761,572958821, 3300000,87,02,//FAK Fr 3
    //
    104110411,105712431,155420871,293741981,596683361,  527800,88,00,//Qui Ra 1 ! PFs are taken from Quinet et al. 2007, A&A, 474, 307
    198321961,258631331,381946231,552565051,754486211, 1015000,88,01,//Qui Ra 2 ! PFs are taken from Quinet et al. 2007, A&A, 474, 307
    100010001,100010031,102311051,133018071,264539391, 3400000,88,02,//FAK Ra 3
    //
    441654441,664281721,101912862,163320772,263333182,  517000,89,00,//Qui Ac 1 ! PFs are taken from Quinet et al. 2007, A&A, 474, 307
    195142621, 72610952,153420412,261732632,397747612, 1175000,89,01,//Qui Ac 2 ! PFs are taken from Quinet et al. 2007, A&A, 474, 307
    723989131,103511752,130814352,155416652,177018682, 2000000,89,02,//AEL Ac 3
    //
     63810522,177929162,457168312, 97513353,175722323,  630670,90,00,//Sne Th 1 ! polynomial approximation from Batom.f subroutine of MOOG code: http://verdi.as.utexas.edu/moog.html
    167142052, 79912843,186125143,322539763,475155383, 1190000,90,01,//BWt Th 2 ! PFs are calculated from 508 energy levels of Blaise & Wyart 1992, Energy Levels and Atomic Spectra of Actinides, Paris
    491281082,108913303,154717483,193921253,230924903, 1830000,90,02,//BWt Th 3 ! PFs are calculated from 175 energy levels of Blaise & Wyart 1992, Energy Levels and Atomic Spectra of Actinides, Paris
    //
    347877992,129318323,240730533,380546863,570368573,  600000,91,00,//AEL Pa 1
    347877992,129318323,240730533,380546863,570368573, 1200000,91,01,//FAK Pa 2
    347777992,129318323,240730533,380546863,570368573, 2000000,91,02,//FAK Pa 3
    //
    209530092,450866762, 96613623,186524763,318839893,  619400,92,00,//AEL U  1
     51311613,230239873,615986563,112513714,158317444, 1060000,92,01,//Sne U  2 ! polynomial approximation from Batom.f subroutine of MOOG code: http://verdi.as.utexas.edu/moog.html
    211130612,456267402, 94912483,151817063,177417123, 2000000,92,02,//Irw U  3 ! PFs are calculated using polynomial approximation from Irwin 1981, ApJS, 45, 621
    //
    209530092,450866762, 96613623,186524763,318839893,  600000,93,00,//FAK Np 1
    209530092,450866762, 96613623,186524763,318839893, 1200000,93,01,//FAK Np 2
    209530092,450866762, 96613623,186524763,318839893, 2000000,93,02,//FAK Np 3
    //
    209530092,450866762, 96613623,186524763,318839893,  600000,94,00,//FAK Pu 1
    209530092,450866762, 96613623,186524763,318839893, 1200000,94,01,//FAK Pu 2
    209530092,450866762, 96613623,186524763,318839893, 2000000,94,02,//FAK Pu 3
    //
    209530092,450866762, 96613623,186524763,318839893,  600000,95,00,//FAK Am 1
    209530092,450866762, 96613623,186524763,318839893, 1200000,95,01,//FAK Am 2
    209530092,450866762, 96613623,186524763,318839893, 2000000,95,02,//FAK Am 3
    //x
    209530092,450866762, 96613623,186524763,318839893,  600000,96,00,//FAK Cm 1
    209530092,450866762, 96613623,186524763,318839893, 1200000,96,01,//FAK Cm 2
    209530092,450866762, 96613623,186524763,318839893, 2000000,96,02,//FAK Cm 3
    //
    209530092,450866762, 96613623,186524763,318839893,  600000,97,00,//FAK Bk 1
    209530092,450866762, 96613623,186524763,318839893, 1200000,97,01,//FAK Bk 2
    209530092,450866762, 96613623,186524763,318839893, 2000000,97,02,//FAK Bk 3
    //
    209530092,450866762, 96613623,186524763,318839893,  600000,98,00,//FAK Cf 1
    209530092,450866762, 96613623,186524763,318839893, 1200000,98,01,//FAK Cf 2
    209530092,450866762, 96613623,186524763,318839893, 2000000,98,02,//FAK Cf 3
    //
    209530092,450866762, 96613623,186524763,318839893,  600000,99,00,//FAK Es 1
    209530092,450866762, 96613623,186524763,318839893, 1200000,99,01,//FAK Es 2
    209530092,450866762, 96613623,186524763,318839893, 2000000,99,02//FAK Es 3
  };


  template <class Ft> int partition_f(int IEL, Ft TT, Ft XNELEC, Ft XNATOM, Ft *POTI, Ft *FRCT, bool scalPot = false)
    {
      const int IONSIZ = 6;
      Ft IP[IONSIZ], PART[IONSIZ], POTLO[IONSIZ];
      
      /* --- Identify the position on the table using the 6th row number--- */
      
      int N = idx[IEL];      // Location on the table
      int NIONS = nLev[IEL]; // Number of Ionization stages available for that atom
      Ft TTKEV=(phyc::BK / phyc::EV)*TT, TV=TTKEV, TTK=phyc::BK*TT, D1=0, D2=0;
      const double SCALE[4] = {0.001,0.01,0.1,1.0};
      
      /* ---   Lowering of the ionization potential in Volts for unit Zeff --- */
      
      Ft CHARGE=2.0 * XNELEC,  EXCESS=XNELEC-XNATOM;

      /* --- Special allowance for doubly ionized Helium --- */
      
      if(EXCESS > 0.0) CHARGE = CHARGE-EXCESS+4.*(2.*EXCESS);

      /* ---  Compute the inverse of Debye radius to avoid 
	 division by zero at low temperatures --- */

      Ft DEBYE=sqrt(2.8965E-18*CHARGE/TTK), POTLOW=std::min(1.0,1.44E-7*DEBYE);
      

      int NIONS2=NIONS;
      N-=1; // It will be increased inside the loop

      Ft T2000, DT, PMIN, P1, P2, G, Z;
      int IT,I,KSCALE,NNN100,KP1=0,K3,K1,K2;
      
      for(int IONN=0;IONN < NIONS2; IONN++){
	Z = IONN+1.0; // H = 1 and so on;
	POTLO[IONN] = POTLOW*Z;
	N +=1;
	
	NNN100 = table[N][5]/100; 
	IP[IONN] = (Ft)NNN100*0.001;
	G = table[N][5] - NNN100*100;

	if(N == idx[0]){ // Hydrogen, first element in the table;
	  PART[0] = 2.0 + 8.*exp(-10.196/TV)+18.*exp(-12.084/TV)+32.*
	    exp(-12.745/TV)+50.*exp(-13.051/TV)+72.*exp(-13.217/TV);
	  D1=13.595/6.5/6.5/TV, D2 = POTLO[0]/TV;
	}else{
	  T2000=IP[IONN]*2000./11.;
	  IT = std::max(1,std::min(9,int(TT/T2000-0.5)));
	  DT=TT/T2000-float(IT)-.5;
	  PMIN=1.0;
	  I=(IT+1)/2;
	  K1=table[N][I-1]/100000;
	  K2=table[N][I-1]-K1*100000;
	  K3=K2/10;
	  KSCALE=K2-K3*10;
	  
	  if((IT%2) == 0){
	    P1=K3*SCALE[KSCALE-1];
	    K1=table[N][I]/100000;
	    KSCALE= table[N][I]%10;
	    P2=K1*SCALE[KSCALE-1];
	  }else{
	    P1=K1*SCALE[KSCALE-1];
	    P2=K3*SCALE[KSCALE-1];
	    if(DT < 0 && KSCALE <= 1) KP1 = P1;
	    if(DT < 0 && KSCALE <= 1 && KP1 == int(P2+.5)) PMIN=KP1;
	  }
	  PART[IONN] = std::max(PMIN,P1+(P2-P1)*DT);
	  
	  if((G == 0.0) || (POTLO[IONN] < 0.1) || (TT < (T2000*4.0))) continue;
	  if(TT > (T2000*11.)) TV = (T2000*11.)*8.6171E-5;//*(phyc::BK / phyc::EV);
	  D1=0.1/TV; 
	}
	
	D2=POTLO[IONN]/TV;
	PART[IONN] += G*exp(-IP[IONN]/TV)*
	  (pow(sqrt(13.595*Z*Z/TV/D2),3)*(1./3.+(1.-(.5+(1./18.+D2/120.)*D2)*D2)*D2)-
	   pow(sqrt(13.595*Z*Z/TV/D1),3)*(1./3.+(1.-(.5+(1./18.+D1/120.)*D1)*D1)*D1));
	
      } // IONN loop

      
      /* --- Copy results to output arrays --- */
      
      for(int ii=0; ii<NIONS; ii++){
	FRCT[ii] = PART[ii];
	if(scalPot) POTI[ii] = IP[ii] - POTLO[ii];
	else        POTI[ii] = IP[ii];
	//	printf("[%d] PF=%e, ION=%e\n", ii, FRCT[ii], POTI[ii]);
      }
      
      return (int)NIONS;
    }

  template <class Ft> void partition_f_one(int IEL, int IONN, Ft TT, Ft XNELEC, Ft XNATOM, Ft &POTI, Ft &FRCT, bool scalPot = false)
    {
      const int IONSIZ = 6;
      Ft IP, PART, POTLO;
      IONN -= 1; // 
      
      /* --- Identify the position on the table using the 6th row number--- */
      
      int N = idx[IEL];      // Location on the table
      int NIONS = nLev[IEL]; // Number of Ionization stages available for that atom
      Ft TTKEV=(phyc::BK / phyc::EV)*TT, TV=TTKEV, TTK=phyc::BK*TT, D1=0, D2=0;
      const double SCALE[4] = {0.001,0.01,0.1,1.0};

      if(IONN > NIONS-1){
	POTI = 0.0; FRCT = 0.0;
	return;
      }
      
      /* ---   Lowering of the ionization potential in Volts for unit Zeff --- */
      
      Ft CHARGE=2.0 * XNELEC,  EXCESS=XNELEC-XNATOM;

      /* --- Special allowance for doubly ionized Helium --- */
      
      if(EXCESS > 0.0) CHARGE = CHARGE-EXCESS+4.*(2.*EXCESS);

      /* ---  Compute the inverse of Debye radius to avoid 
	 division by zero at low temperatures --- */

      Ft DEBYE=sqrt(2.8965E-18*CHARGE/TTK), POTLOW=std::min(1.0,1.44E-7*DEBYE);
      

      int NIONS2=NIONS;
      N-=1; // It will be increased inside the loop

      Ft T2000, DT, PMIN, P1, P2, G, Z;
      int IT,I,KSCALE,NNN100,KP1=0,K3,K1,K2;
      
      // for(int IONN=0;IONN < NIONS2; IONN++){
      Z = IONN+1.0; // H = 1 and so on;
      POTLO = POTLOW*Z;
      N +=1;
	
      NNN100 = table[N][5]/100; 
      IP = (Ft)NNN100*0.001;
      G = table[N][5] - NNN100*100;
      
      if(N == idx[0]){ // Hydrogen, first element in the table;
	PART = 2.0 + 8.*exp(-10.196/TV)+18.*exp(-12.084/TV)+32.*
	  exp(-12.745/TV)+50.*exp(-13.051/TV)+72.*exp(-13.217/TV);
	D1=13.595/6.5/6.5/TV, D2 = POTLO/TV;
      }else{
	T2000=IP*2000./11.;
	IT = std::max(1,std::min(9,int(TT/T2000-0.5)));
	DT=TT/T2000-float(IT)-.5;
	PMIN=1.0;
	I=(IT+1)/2;
	K1=table[N][I-1]/100000;
	K2=table[N][I-1]-K1*100000;
	K3=K2/10;
	KSCALE=K2-K3*10;
	
	if((IT%2) == 0){
	  P1=K3*SCALE[KSCALE-1];
	  K1=table[N][I]/100000;
	  KSCALE= table[N][I]%10;
	  P2=K1*SCALE[KSCALE-1];
	}else{
	  P1=K1*SCALE[KSCALE-1];
	  P2=K3*SCALE[KSCALE-1];
	  if(DT < 0 && KSCALE <= 1) KP1 = P1;
	  if(DT < 0 && KSCALE <= 1 && KP1 == int(P2+.5)) PMIN=KP1;
	}
	PART = std::max(PMIN,P1+(P2-P1)*DT);
	
	if((G != 0.0) && (POTLO >= 0.1) && (TT >= (T2000*4.0))){ 
	  if(TT > (T2000*11.)) TV = (T2000*11.)*8.6171E-5;//*(phyc::BK / phyc::EV);
	  D1=0.1/TV;
	}
      }
      
      D2=POTLO/TV;
      PART += G*exp(-IP/TV)*
	(pow(sqrt(13.595*Z*Z/TV/D2),3)*(1./3.+(1.-(.5+(1./18.+D2/120.)*D2)*D2)*D2)-
	 pow(sqrt(13.595*Z*Z/TV/D1),3)*(1./3.+(1.-(.5+(1./18.+D1/120.)*D1)*D1)*D1));
      
      
      
      /* --- Copy results to output arrays --- */
      
      FRCT = PART;
      if(scalPot) POTI = IP - POTLO;
      else        POTI = IP;
    }
  
}

#endif
